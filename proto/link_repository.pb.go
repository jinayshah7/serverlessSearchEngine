// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1-devel
// 	protoc        v3.15.2
// source: link_repository.proto

package __

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Link struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid        []byte                 `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Url         string                 `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	RetrievedAt *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=retrieved_at,json=retrievedAt,proto3" json:"retrieved_at,omitempty"`
}

func (x *Link) Reset() {
	*x = Link{}
	if protoimpl.UnsafeEnabled {
		mi := &file_link_repository_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Link) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Link) ProtoMessage() {}

func (x *Link) ProtoReflect() protoreflect.Message {
	mi := &file_link_repository_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Link.ProtoReflect.Descriptor instead.
func (*Link) Descriptor() ([]byte, []int) {
	return file_link_repository_proto_rawDescGZIP(), []int{0}
}

func (x *Link) GetUuid() []byte {
	if x != nil {
		return x.Uuid
	}
	return nil
}

func (x *Link) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *Link) GetRetrievedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.RetrievedAt
	}
	return nil
}

type Edge struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uuid            []byte                 `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	SourceUuid      []byte                 `protobuf:"bytes,2,opt,name=source_uuid,json=sourceUuid,proto3" json:"source_uuid,omitempty"`
	DestinationUuid []byte                 `protobuf:"bytes,3,opt,name=destination_uuid,json=destinationUuid,proto3" json:"destination_uuid,omitempty"`
	UpdatedAt       *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *Edge) Reset() {
	*x = Edge{}
	if protoimpl.UnsafeEnabled {
		mi := &file_link_repository_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Edge) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Edge) ProtoMessage() {}

func (x *Edge) ProtoReflect() protoreflect.Message {
	mi := &file_link_repository_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Edge.ProtoReflect.Descriptor instead.
func (*Edge) Descriptor() ([]byte, []int) {
	return file_link_repository_proto_rawDescGZIP(), []int{1}
}

func (x *Edge) GetUuid() []byte {
	if x != nil {
		return x.Uuid
	}
	return nil
}

func (x *Edge) GetSourceUuid() []byte {
	if x != nil {
		return x.SourceUuid
	}
	return nil
}

func (x *Edge) GetDestinationUuid() []byte {
	if x != nil {
		return x.DestinationUuid
	}
	return nil
}

func (x *Edge) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type RemoveOldEdgesQuery struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FromUuid      []byte                 `protobuf:"bytes,1,opt,name=from_uuid,json=fromUuid,proto3" json:"from_uuid,omitempty"`
	UpdatedBefore *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=updated_before,json=updatedBefore,proto3" json:"updated_before,omitempty"`
}

func (x *RemoveOldEdgesQuery) Reset() {
	*x = RemoveOldEdgesQuery{}
	if protoimpl.UnsafeEnabled {
		mi := &file_link_repository_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoveOldEdgesQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoveOldEdgesQuery) ProtoMessage() {}

func (x *RemoveOldEdgesQuery) ProtoReflect() protoreflect.Message {
	mi := &file_link_repository_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoveOldEdgesQuery.ProtoReflect.Descriptor instead.
func (*RemoveOldEdgesQuery) Descriptor() ([]byte, []int) {
	return file_link_repository_proto_rawDescGZIP(), []int{2}
}

func (x *RemoveOldEdgesQuery) GetFromUuid() []byte {
	if x != nil {
		return x.FromUuid
	}
	return nil
}

func (x *RemoveOldEdgesQuery) GetUpdatedBefore() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedBefore
	}
	return nil
}

var File_link_repository_proto protoreflect.FileDescriptor

var file_link_repository_proto_rawDesc = []byte{
	0x0a, 0x15, 0x6c, 0x69, 0x6e, 0x6b, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72,
	0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x6c, 0x69, 0x6e, 0x6b, 0x72, 0x65, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x6b, 0x0a, 0x04, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x12, 0x0a,
	0x04, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x75, 0x75, 0x69,
	0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x75, 0x72, 0x6c, 0x12, 0x3d, 0x0a, 0x0c, 0x72, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x64,
	0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0b, 0x72, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x64,
	0x41, 0x74, 0x22, 0xa1, 0x01, 0x0a, 0x04, 0x45, 0x64, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x75,
	0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x75, 0x75, 0x69, 0x64, 0x12,
	0x1f, 0x0a, 0x0b, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x55, 0x75, 0x69, 0x64,
	0x12, 0x29, 0x0a, 0x10, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x75, 0x75, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0f, 0x64, 0x65, 0x73, 0x74,
	0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x75, 0x69, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x75, 0x0a, 0x13, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65,
	0x4f, 0x6c, 0x64, 0x45, 0x64, 0x67, 0x65, 0x73, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x1b, 0x0a,
	0x09, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x75, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x08, 0x66, 0x72, 0x6f, 0x6d, 0x55, 0x75, 0x69, 0x64, 0x12, 0x41, 0x0a, 0x0e, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0d,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x42, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x32, 0xcf, 0x01,
	0x0a, 0x0e, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79,
	0x12, 0x36, 0x0a, 0x08, 0x53, 0x61, 0x76, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x14, 0x2e, 0x6c,
	0x69, 0x6e, 0x6b, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x4c, 0x69,
	0x6e, 0x6b, 0x1a, 0x14, 0x2e, 0x6c, 0x69, 0x6e, 0x6b, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x6f, 0x72, 0x79, 0x2e, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x36, 0x0a, 0x08, 0x53, 0x61, 0x76, 0x65,
	0x45, 0x64, 0x67, 0x65, 0x12, 0x14, 0x2e, 0x6c, 0x69, 0x6e, 0x6b, 0x72, 0x65, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x45, 0x64, 0x67, 0x65, 0x1a, 0x14, 0x2e, 0x6c, 0x69, 0x6e,
	0x6b, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x6f, 0x72, 0x79, 0x2e, 0x45, 0x64, 0x67, 0x65,
	0x12, 0x4d, 0x0a, 0x0e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4f, 0x6c, 0x64, 0x45, 0x64, 0x67,
	0x65, 0x73, 0x12, 0x23, 0x2e, 0x6c, 0x69, 0x6e, 0x6b, 0x72, 0x65, 0x70, 0x6f, 0x73, 0x69, 0x74,
	0x6f, 0x72, 0x79, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x4f, 0x6c, 0x64, 0x45, 0x64, 0x67,
	0x65, 0x73, 0x51, 0x75, 0x65, 0x72, 0x79, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x42,
	0x04, 0x5a, 0x02, 0x2e, 0x2f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_link_repository_proto_rawDescOnce sync.Once
	file_link_repository_proto_rawDescData = file_link_repository_proto_rawDesc
)

func file_link_repository_proto_rawDescGZIP() []byte {
	file_link_repository_proto_rawDescOnce.Do(func() {
		file_link_repository_proto_rawDescData = protoimpl.X.CompressGZIP(file_link_repository_proto_rawDescData)
	})
	return file_link_repository_proto_rawDescData
}

var file_link_repository_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_link_repository_proto_goTypes = []interface{}{
	(*Link)(nil),                  // 0: linkrepository.Link
	(*Edge)(nil),                  // 1: linkrepository.Edge
	(*RemoveOldEdgesQuery)(nil),   // 2: linkrepository.RemoveOldEdgesQuery
	(*timestamppb.Timestamp)(nil), // 3: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),         // 4: google.protobuf.Empty
}
var file_link_repository_proto_depIdxs = []int32{
	3, // 0: linkrepository.Link.retrieved_at:type_name -> google.protobuf.Timestamp
	3, // 1: linkrepository.Edge.updated_at:type_name -> google.protobuf.Timestamp
	3, // 2: linkrepository.RemoveOldEdgesQuery.updated_before:type_name -> google.protobuf.Timestamp
	0, // 3: linkrepository.LinkRepository.SaveLink:input_type -> linkrepository.Link
	1, // 4: linkrepository.LinkRepository.SaveEdge:input_type -> linkrepository.Edge
	2, // 5: linkrepository.LinkRepository.RemoveOldEdges:input_type -> linkrepository.RemoveOldEdgesQuery
	0, // 6: linkrepository.LinkRepository.SaveLink:output_type -> linkrepository.Link
	1, // 7: linkrepository.LinkRepository.SaveEdge:output_type -> linkrepository.Edge
	4, // 8: linkrepository.LinkRepository.RemoveOldEdges:output_type -> google.protobuf.Empty
	6, // [6:9] is the sub-list for method output_type
	3, // [3:6] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_link_repository_proto_init() }
func file_link_repository_proto_init() {
	if File_link_repository_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_link_repository_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Link); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_link_repository_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Edge); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_link_repository_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoveOldEdgesQuery); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_link_repository_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_link_repository_proto_goTypes,
		DependencyIndexes: file_link_repository_proto_depIdxs,
		MessageInfos:      file_link_repository_proto_msgTypes,
	}.Build()
	File_link_repository_proto = out.File
	file_link_repository_proto_rawDesc = nil
	file_link_repository_proto_goTypes = nil
	file_link_repository_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// LinkRepositoryClient is the client API for LinkRepository service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type LinkRepositoryClient interface {
	SaveLink(ctx context.Context, in *Link, opts ...grpc.CallOption) (*Link, error)
	SaveEdge(ctx context.Context, in *Edge, opts ...grpc.CallOption) (*Edge, error)
	RemoveOldEdges(ctx context.Context, in *RemoveOldEdgesQuery, opts ...grpc.CallOption) (*emptypb.Empty, error)
}

type linkRepositoryClient struct {
	cc grpc.ClientConnInterface
}

func NewLinkRepositoryClient(cc grpc.ClientConnInterface) LinkRepositoryClient {
	return &linkRepositoryClient{cc}
}

func (c *linkRepositoryClient) SaveLink(ctx context.Context, in *Link, opts ...grpc.CallOption) (*Link, error) {
	out := new(Link)
	err := c.cc.Invoke(ctx, "/linkrepository.LinkRepository/SaveLink", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *linkRepositoryClient) SaveEdge(ctx context.Context, in *Edge, opts ...grpc.CallOption) (*Edge, error) {
	out := new(Edge)
	err := c.cc.Invoke(ctx, "/linkrepository.LinkRepository/SaveEdge", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *linkRepositoryClient) RemoveOldEdges(ctx context.Context, in *RemoveOldEdgesQuery, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/linkrepository.LinkRepository/RemoveOldEdges", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// LinkRepositoryServer is the server API for LinkRepository service.
type LinkRepositoryServer interface {
	SaveLink(context.Context, *Link) (*Link, error)
	SaveEdge(context.Context, *Edge) (*Edge, error)
	RemoveOldEdges(context.Context, *RemoveOldEdgesQuery) (*emptypb.Empty, error)
}

// UnimplementedLinkRepositoryServer can be embedded to have forward compatible implementations.
type UnimplementedLinkRepositoryServer struct {
}

func (*UnimplementedLinkRepositoryServer) SaveLink(context.Context, *Link) (*Link, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SaveLink not implemented")
}
func (*UnimplementedLinkRepositoryServer) SaveEdge(context.Context, *Edge) (*Edge, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SaveEdge not implemented")
}
func (*UnimplementedLinkRepositoryServer) RemoveOldEdges(context.Context, *RemoveOldEdgesQuery) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RemoveOldEdges not implemented")
}

func RegisterLinkRepositoryServer(s *grpc.Server, srv LinkRepositoryServer) {
	s.RegisterService(&_LinkRepository_serviceDesc, srv)
}

func _LinkRepository_SaveLink_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Link)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LinkRepositoryServer).SaveLink(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/linkrepository.LinkRepository/SaveLink",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LinkRepositoryServer).SaveLink(ctx, req.(*Link))
	}
	return interceptor(ctx, in, info, handler)
}

func _LinkRepository_SaveEdge_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Edge)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LinkRepositoryServer).SaveEdge(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/linkrepository.LinkRepository/SaveEdge",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LinkRepositoryServer).SaveEdge(ctx, req.(*Edge))
	}
	return interceptor(ctx, in, info, handler)
}

func _LinkRepository_RemoveOldEdges_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RemoveOldEdgesQuery)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LinkRepositoryServer).RemoveOldEdges(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/linkrepository.LinkRepository/RemoveOldEdges",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LinkRepositoryServer).RemoveOldEdges(ctx, req.(*RemoveOldEdgesQuery))
	}
	return interceptor(ctx, in, info, handler)
}

var _LinkRepository_serviceDesc = grpc.ServiceDesc{
	ServiceName: "linkrepository.LinkRepository",
	HandlerType: (*LinkRepositoryServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SaveLink",
			Handler:    _LinkRepository_SaveLink_Handler,
		},
		{
			MethodName: "SaveEdge",
			Handler:    _LinkRepository_SaveEdge_Handler,
		},
		{
			MethodName: "RemoveOldEdges",
			Handler:    _LinkRepository_RemoveOldEdges_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "link_repository.proto",
}
